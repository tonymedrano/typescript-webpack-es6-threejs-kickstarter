/*
 * Filename: /Users/tonymedrano/Desktop/canvas-typescript-physics/src/app.ts
 * Path: /Users/tonymedrano/Desktop/canvas-typescript-physics
 * Created Date: Tuesday, February 27th 2018, 6:30:22 am
 * Author: tonymedrano
 * 
 * Copyright (c) 2019 CANVAS TYPESCRIPT PHYSICS by TONY MEDRANO
 */
import { Vector } from './vector'
import { Particle } from './particle'
import { getRandomColor, colors, Drawing } from './utils'

//. Create element
const canvas: HTMLCanvasElement = document.createElement('canvas')
canvas.id = 'canvas-typescript-physics'
canvas.width = window.innerWidth
canvas.height = window.innerHeight
document.body.appendChild(canvas)

//. Create context
const ctx: any = canvas.getContext('2d')
const width: number = canvas.width
const height: number = canvas.height

//. Definitions - chapter 9
const radius = 10
const p = Particle.create(100, height, radius, -Math.PI / 2)
const accel = Vector.create(0.1, 0.1)

//. colors
const colorBall = colors.darkviolet
const colorDrawing = getRandomColor()

//. Drawing
Drawing(ctx, colorDrawing)

//. Fireworks
const particles: Array<any> = []
const numParticles: number = 100

for(var i = 0; i < numParticles; i += 1) {
	particles.push(Particle.create(width / 2, height / 3, Math.random() * 5 + 2, Math.random() * Math.PI * 2, 0.1));
}

//. Runtime
const _update = () => {

 // p.accelerate(accel)

  ctx.setTransform(1, 0, 0, 1, 0, 0)
  ctx.clearRect(0, 0, width, height)

  for(let i = 0; i < numParticles; i += 1) {
    const p = particles[i]

    p.update()

    ctx.beginPath()
    ctx.arc(p.position.x, p.position.y, 4, 0, Math.PI * 2, false)
    ctx.fillStyle = getRandomColor()
    ctx.fill()
  }

  requestAnimationFrame(_update)

}
_update()